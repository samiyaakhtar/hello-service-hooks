trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - '*'

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

variables:
- group: Container Journey

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true
  clean: true

- bash: |
    echo "SourceBranchName = $(Build.SourceBranchName)"
    echo "SourceBranch = $(Build.SourceBranch)"
    branch_name_extracted=$(echo "${SourceBranch/refs\/head\// }")
  displayName: Extract branch name
  
# - bash: |
#     git clone https://github.com/microsoft/spektate.git
#     cd spektate/pipeline-scripts

#     sudo /usr/bin/easy_install virtualenv
#     pip install virtualenv 
#     pip install --upgrade pip
#     python -m virtualenv venv
#     source venv/bin/activate
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt

#     tag_name="hello-service-hooks-$(Build.SourceBranchName)-$(Build.BuildId)"
#     commitId=$(Build.SourceVersion)
#     commitId=$(echo "${commitId:0:7}")
#     echo "python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId"
#     python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId 
#   displayName: Update source pipeline details in CJ db


- bash: |
    curl $SCRIPT > script.sh
    chmod +x ./script.sh
    tag_name="hello-service-hooks-$(Build.SourceBranchName)-$(Build.BuildId)"
    commitId=$(Build.SourceVersion)
    commitId=$(echo "${commitId:0:7}")
    echo "./script.sh $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId service $(Build.Repository.Name)"
    ./script.sh $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId service $(Build.Repository.Name)
  displayName: Update manifest pipeline details in CJ db
  env:
    SCRIPT: https://raw.githubusercontent.com/samiyaakhtar/spk/686-simply-pipelines/scripts/update_introspection.sh



- task: Docker@2
  inputs:
    containerRegistry: 'hellorings_acr'
    repository: 'helloservicehooks'
    command: 'buildAndPush'
    Dockerfile: '**/src/Dockerfile'
    tags: 'hello-service-hooks-$(Build.SourceBranchName)-$(Build.BuildId)'
  condition: ne(variables['Build.Reason'], 'PullRequest')

- bash: |
    # touch artifact-$(Build.BuildId).env
    # vim artifact-$(Build.BuildId)
    echo "testing testing" >> artifact-$(Build.BuildId).env
    echo "##vso[task.setvariable variable=pwd]$(pwd)"
  displayName: extract some information and place in an artifact

- task: PublishPipelineArtifact@1
  inputs:
    path: $(pwd)/artifact-$(Build.BuildId).env
    artifact: artifact-$(Build.BuildId).env
